---
import { Icon } from "astro-icon/components";
import Button from "@/components/ui/Button.astro";
import ToggleMenu from "@/components/common/ToggleMenu.astro";
import Logo from "@/components/Logo.astro";

import { getMenu } from "@/lib/getMenu";

import { trimSlash } from "@/utils/permalinks";
const menu = await getMenu();
export interface Props {
  id?: string;
  isSticky?: boolean;
  isDark?: boolean;
  isFullWidth?: boolean;
  showToggleTheme?: boolean;
  showRssFeed?: boolean;
  position?: string;
  logourl: string;
}
const {
  id = "header",
  position = "center",
  isFullWidth = false,
  logourl,
} = Astro.props;
const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;
console.log(position, isFullWidth);
---

<header id={id} class="bg-haeder-bg sticky">
  <div class="absolute inset-0"></div>
  <div
    class:list={[
      "relative text-default py-0 md:px-0 px-6 mx-auto w-full ",
      {
        "md:flex md:justify-between": position !== "center",
      },
      {
        "md:grid md:grid-cols-3 md:items-center": position === "center",
      },
      {
        "max-w-7xl": !isFullWidth,
      },
    ]}
  >
    <div
      class:list={[
        { "mr-auto rtl:mr-0 rtl:ml-auto": position === "right" },
        "flex justify-between md:w-[fit-content]",
      ]}
    >
      <Logo logourl={logourl} />
      <div class="flex items-center md:hidden">
        <ToggleMenu />
      </div>
    </div>
    <nav
      class="items-center w-full md:w-auto hidden md:flex md:mx-5 text-default overflow-y-auto overflow-x-hidden md:overflow-y-visible md:overflow-x-auto md:justify-self-center"
      aria-label="Main navigation"
    >
      <ul
        class="flex md:h-full flex-col md:flex-row md:self-center w-full md:w-auto text-xl md:text-[0.9375rem] tracking-[0.01rem] font-medium md:justify-center"
      >
        {
          menu.map(({ name_ch: text, url: href, children: links }) => (
            <li
              class={`${links?.length ? "dropdown" : ""} md:h-full md:flex justify-center items-center group/menu `}
            >
              {links?.length ? (
                <>
                  <button
                    type="button"
                    class="hover:text-link h-full relative dark:hover:text-white px-4 py-3 flex items-center text-nowrap md:py-6 pseudo-after after:content-[''] after:block after:w-0 sm:group-hover/menu:after:w-full after:h-[2px] after:bg-white after:absolute after:bottom-1 after:left-1/2 after:translate-x-[-50%] after:transition-width after:duration-300 after:ease"
                  >
                    <a href={href} class="md:text-haeder-text">
                      {text}
                    </a>
                    <Icon
                      name="tabler:chevron-down"
                      class="w-3.5 h-3.5 ml-0.5 rtl:ml-0 rtl:mr-0.5 hidden md:inline md:text-haeder-text sm:group-hover/menu:rotate-180 transition-all duration-300"
                    />
                  </button>
                  {
                    <ul class="dropdown-menu after: md:backdrop-blur-md dark:md:bg-dark rounded md:absolute top-full pl-4 md:pl-0 md:hidden font-medium md:bg-white/90 md:min-w-[200px] drop-shadow-xl">
                      {links.map(({ name_ch: text2, url: href2 }) => (
                        <li>
                          <a
                            class:list={[
                              "first:rounded-t last:rounded-b md:hover:bg-gray-100 hover:text-link dark:hover:text-white dark:hover:bg-gray-700 py-2 px-5 block whitespace-no-wrap ",
                              { "aw-link-active": href2 === currentPath },
                            ]}
                            href={href2}
                          >
                            {text2}
                          </a>
                        </li>
                      ))}
                    </ul>
                  }
                </>
              ) : (
                <a
                  class:list={[
                    "hover:text-link dark:hover:text-white px-4 text-nowrap py-3 flex items-center md:py-6 md:text-haeder-text",
                    { "aw-link-active": href === currentPath },
                  ]}
                  href={href === "/home" ? "/" : href}
                >
                  {text}
                </a>
              )}
            </li>
          ))
        }
      </ul>
    </nav>
  </div>
</header>
