---
interface Pagination {
  total: number | string;
  pageSize: number | string;
  current: number | string;
}
export interface Props {
  pagination: Pagination;
}
const {
  props: { pagination },
  url,
} = Astro;
const href = url.toString();
let newHref;
if (href.includes('/page-')) {
  newHref = href.replace(/\/page-\d+/, `/page-`);
} else {
  newHref = `${href}/page-`;
}

const total = Number(pagination.total);
const pageSize = Number(pagination.pageSize);
const current = Number(pagination.current);
const totalPage = Math.ceil(total / pageSize);

const showNumber = 5;

const half = Math.floor(showNumber / 2);

let startPage = current - half;
if (startPage <= 0) {
  startPage = 1;
}

let endPage = startPage + showNumber - 1;
if (endPage > totalPage) {
  endPage = totalPage;
  startPage = Math.max(1, endPage - showNumber + 1);
}
---

<div class="tab-container">
  {
    Array.from({ length: endPage - startPage + 1 }, (_, i) => startPage + i).map((page, index) => (
      <Fragment>
        <>
          <input
            type="radio"
            name="tab"
            id={`tab${index + 1}`}
            class={`tab tab--${index + 1}`}
            checked={current === page}
          />

          <label class={`tab_label ${current === page ? 'active' : ''}`} for={`tab${index + 1}`}>
            <a
              href={`${newHref + page}`}
              class="w-full h-full flex justify-center items-center"
              data-astro-history="push"
            >
              {page}
            </a>
          </label>
        </>
      </Fragment>
    ))
  }

  <div class="indicator"></div>
</div>

<script></script>
<style scoped lang="less">
  /* Remove this container when use*/
  .component-title {
    width: 100%;
    position: absolute;
    z-index: 999;
    top: 30px;
    left: 0;
    padding: 0;
    margin: 0;
    font-size: 1rem;
    font-weight: 700;
    // color: #888;
    text-align: center;
  }

  .tab-container {
    position: relative;

    display: flex;
    flex-direction: row;
    align-items: flex-start;

    padding: 2px;

    border-radius: 9px;
    width: fit-content;
  }

  .indicator {
    content: '';
    width: 40px;
    height: 40px;
    background: var(--header-bg);
    position: absolute;
    top: 2px;
    left: 2px;
    z-index: 9;
    border: 0.5px solid rgba(0, 0, 0, 0.04);
    box-shadow:
      0px 3px 8px rgba(0, 0, 0, 0.12),
      0px 3px 1px rgba(0, 0, 0, 0.04);
    border-radius: 50%;
    transition: all 0.2s ease-out;
  }

  .tab {
    width: 40px;
    height: 28px;
    position: absolute;
    z-index: 99;
    outline: none;
    opacity: 0;
  }
  .active {
    color: #fff;
  }
  .tab_label {
    width: 40px;
    height: 40px;
    position: relative;
    z-index: 999;

    display: flex;
    align-items: center;
    justify-content: center;

    border: 0;
    font-size: 20px;
    font-size: 0.75rem;
    opacity: 0.6;

    cursor: pointer;
  }

  .tab--1:checked ~ .indicator {
    left: 2px;
  }

  .tab--2:checked ~ .indicator {
    left: calc(40px + 2px);
  }

  .tab--3:checked ~ .indicator {
    left: calc(40px * 2 + 2px);
  }
  .tab--4:checked ~ .indicator {
    left: calc(40px * 3 + 2px);
  }
  .tab--5:checked ~ .indicator {
    left: calc(40px * 4 + 2px);
  }
</style>
